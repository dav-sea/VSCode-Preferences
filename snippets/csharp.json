{
	/*
	// Place your snippets for C# here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Log": {
		"prefix": "log",
		"body": "Debug.Log(\"$0\");"
	},
	"LogFormat": {
		"prefix": "logf",
		"body": "Debug.LogFormat($0);"
	},
	"InfiniteWorkflow File": {
		"prefix": "iwf",
		"body": [
			"using UnityEngine;",
			"using UnityEngine.UI;",
			"using UnityEngine.Events;",
			"using System.Collections.Generic;",
			"",
			"namespace InfiniteWorkflow",
			"{",
			"\tpublic class $1 : MonoBehaviour",
			"\t{",
			"\t\t$0",
			"\t}",
			"}"
		]
	},
	"InfiniteWorkflow Script Initialize": {
		"prefix": "init",
		"body": [
			"protected override void OnInitialize()",
			"{",
			"\t$1",
			"}"
		]
	},
	"InfiniteWorkflow Script Initialize In Edit Mode": {
		"prefix": "inite",
		"body": [
			"protected override void OnInitialize()",
			"{",
			"#if UNITY_EDITOR",
			"\t$1",
			"#endif",
			"}"
		]
	},
	"InfiniteWorkflow Script Component Null": {
		"prefix": "initnull",
		"body": [
			"if($0 == null)",
			"{",
			"\tInitializeFailed(nameof($0) + \"is null, in \" + GameObject.name );",
			"\treturn;",
			"}"
		]
	},
	"InfiniteWorkflow Script Component Null In Edit Mode": {
		"prefix": "initnulle",
		"body": [
			"#if UNITY_EDITOR",
			"if($0 == null)",
			"{",
			"\tInitializeFailed(nameof($0) + \"is null, in \" + GameObject.name );",
			"\treturn;",
			"}",
			"#endif"
		]
	},
	"Organizator File": {
		"prefix": "ogf",
		"body": [
			"using UnityEngine;",
			"using System.Collections.Generic;",
			"using OrganizatorAPI;",
			"using InfiniteWorkflow;",
			"",
			"public class $1 : Script",
			"{",
			"\t$0",
			"}",
		]
	},
}